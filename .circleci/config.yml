# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

# === Scheduled Pipeline Parameters ===
parameters:
  nightly-security-scan:
    type: boolean
    default: false
    
jobs:
  build-and-test-sdk:
    macos:
      xcode: "14.0"
    steps:
      - checkout
      - run:
          name: Install xcov
          command: >
            gem install xcov
      - run:
          name: Run Tests
          command: xcodebuild test -project VGSShowSDK.xcodeproj -scheme VGSShowSDKTests -destination 'platform=iOS Simulator,name=iPhone 13,OS=15.5' -enableCodeCoverage YES
      - run:
          name: Calculate Test Coverage
          command: >
            xcov -p VGSShowSDK.xcodeproj -s VGSShowSDK --json_report
      - run:
          name: Show Git Branch
          command: |
            echo "Branch: << pipeline.git.branch >>"
      - run:
          name: Push Test Coverage to Compass
          command: >
            if [ "<< pipeline.git.branch >>" == "main" ]; then
              ./ops/publish-test-coverage.sh 
            else
              echo "Code coverage will only be pushed to compass on the main branch."
            fi
  build-and-ui-test-demo-app-ios-16:
    macos:
      xcode: "14.0"
    steps:
      - checkout
      - run:
          name: Run UI Tests
          command: >
            cd VGSShowDemoApp &&
            cd VGSShowDemoApp &&
            cd Resources && plutil -insert pdftoken -string ${pdftoken} UITestsMockedData.plist &&
            plutil -insert imagetoken -string ${imagetoken} UITestsMockedData.plist &&
            plutil -insert vaultID -string ${vaultID} UITestsMockedData.plist &&
            plutil -insert path -string ${path} UITestsMockedData.plist &&
            cd .. &&
            cd .. &&
            pod install &&
            xcrun instruments -w "iPhone 13 (15.5) [" || true &&
            xcrun instruments -w "iPad Air (5th generation) (16.0) [" || true &&
            xcodebuild test -workspace VGSShowDemoApp.xcworkspace
            -scheme VGSShowDemoAppUITests
            -sdk iphonesimulator
            -destination 'platform=iOS Simulator,name=iPhone 13,OS=15.5'
            -destination 'platform=iOS Simulator,name=iPad Air (5th generation),OS=16.0'

  scan-sast-pr:
    parameters:
      default_branch:
        type: string
        default: main
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
      SEMGREP_BASELINE_REF: << parameters.default_branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep diff scan"
          command: semgrep ci

  scan-sast-full:
    parameters:
      default_branch:
        type: string
        default: main
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep full scan"
          command: semgrep ci

workflows:
  build-and-test:
    when:
      not: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-pr:
          context:
            - security-tools
            - frontend-deploy
            - circleci
      - scan-sast-full:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build-and-test-sdk
      - build-and-ui-test-demo-app-ios-16
      

  scheduled-security-scan:
    when: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-full:
          context:
            - security-tools
            - frontend-deploy
            - circleci
